import{S as t,t as e}from"../Utils-eb9561bf.js";class s extends t{constructor(){super();const t=document.createElement("f-node"),e=()=>{const t=this.canvas;null!==t&&t.select(this)};t.addEventListener("mousedown",e,!0),t.addEventListener("touchstart",e,!0),this._onConnect=t=>{const{target:e}=t;for(const t of this.elements)t!==e&&t.dispatchEvent(new Event("nodeConnect"))},this._onConnectChildren=t=>{const{target:e}=t;for(const t of this.elements)t!==e&&t.dispatchEvent(new Event("nodeConnectChildren"))},this.dom=t,this.style="",this.canvas=null,this.elements=[],this.events={focus:[],blur:[]},this.setWidth(300).setPosition(0,0)}onFocus(t){return this.events.focus.push(t),this}onBlur(t){return this.events.blur.push(t),this}setStyle(t){const e=this.dom;return this.style&&e.classList.remove(this.style),t&&e.classList.add(t),this.style=t,this}setPosition(t,s){const n=this.dom;return n.style.left=e(t),n.style.top=e(s),this}getPosition(){const t=this.dom;return{x:parseInt(t.style.left),y:parseInt(t.style.top)}}setWidth(t){return this.dom.style.width=e(t),this}getWidth(){return parseInt(this.dom.style.width)}add(t){return this.elements.push(t),t.node=this,t.addEventListener("connect",this._onConnect),t.addEventListener("connectChildren",this._onConnectChildren),this.dom.append(t.dom),this}remove(t){return this.elements.splice(this.elements.indexOf(t),1),t.node=null,t.removeEventListener("connect",this._onConnect),t.removeEventListener("connectChildren",this._onConnectChildren),this.dom.removeChild(t.dom),this}dispose(){const t=this.canvas;null!==t&&t.remove(this);for(const t of this.elements)t.dispose();this.dispatchEvent(new Event("dispose"))}isCircular(t){if(t===this)return!0;const e=this.getLinks();for(const s of e)if(s.outputElement.node.isCircular(t))return!0;return!1}getLinks(){const t=[];for(const e of this.elements)t.push(...e.links);return t}serialize(t){const{x:e,y:s}=this.getPosition(),n=[];for(const e of this.elements)n.push(e.toJSON(t).id);t.x=e,t.y=s,t.width=this.getWidth(),t.elements=n,""!==this.style&&(t.style=this.style)}deserialize(t){this.setPosition(t.x,t.y),this.setWidth(t.width),void 0!==t.style&&this.setStyle(t.style);const e=this.elements;if(e.length>0){let s=0;for(const n of t.elements)t.objects[n]=e[s++]}else for(const e of t.elements)this.add(t.objects[e])}}s.prototype.isNode=!0;export{s as Node};
