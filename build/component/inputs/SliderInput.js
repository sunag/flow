import{Input as e}from"../core/Input.js";import{NumberInput as t}from"./NumberInput.js";import{b as s}from"../Utils-eb9561bf.js";const n=(e,t)=>.001*(t-e);class i extends e{constructor(e=0,i=0,a=100){const r=document.createElement("f-subinputs");super(r),e=Math.min(Math.max(e,i),a);const m=n(i,a),h=document.createElement("input");h.type="range",h.min=i,h.max=a,h.step=m,h.value=e;const u=new t(e,i,a,m);u.dom.className="range-value",u.onChange((()=>{h.value=u.getValue()})),u.addEventListener("range",(()=>{h.min=u.min,h.max=u.max,h.step=u.step,h.value=u.getValue()})),r.append(h),r.append(u.dom),this.rangeDOM=h,this.field=u;const l=()=>{let e=Number(h.value);e!==this.max&&e+this.step>=this.max&&(h.value=e=this.max),this.field.setValue(e)};s(h,(()=>{l(),this.dispatchEvent(new Event("change"))}),"")}get min(){return this.field.min}get max(){return this.field.max}get step(){return this.field.step}setRange(e,t){return this.field.setRange(e,t,n(e,t)),this.dispatchEvent(new Event("range")),this.dispatchEvent(new Event("change")),this}setValue(e,t=!0){return this.field.setValue(e),this.rangeDOM.value=e,t&&this.dispatchEvent(new Event("change")),this}getValue(){return this.field.getValue()}serialize(e){e.min=this.min,e.max=this.max,super.serialize(e)}deserialize(e){const{min:t,max:s}=e;this.setRange(t,s),super.deserialize(e)}}export{i as SliderInput};
