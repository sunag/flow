let e=0;class t extends EventTarget{constructor(){super(),this._id=e++,this._serializable=!0}get id(){return this._id}setSerializable(e){return this._serializable=e,this}getSerializable(){return this._serializable}serialize(){console.warn("Serializer: Abstract function.")}deserialize(){console.warn("Serializer: Abstract function.")}toJSON(e=null){let t=null;const s=this.id;if(null!==e){const n=e.objects;t=n[s],void 0===t&&(t={objects:n},this.serialize(t),delete t.objects,n[s]=t)}else t={objects:{}},this.serialize(t);return t.id=s,t.type=this.constructor.name,t}}(new class{started=!1;constructor(){this.x=0,this.y=0,this._onMoveEvent=e=>{const t=e.touches?e.touches[0]:e;this.x=t.x,this.y=t.y}}start(){if(!this.started)return this.started=!0,window.addEventListener("wheel",this._onMoveEvent,!0),window.addEventListener("mousedown",this._onMoveEvent,!0),window.addEventListener("touchstart",this._onMoveEvent,!0),window.addEventListener("mousemove",this._onMoveEvent,!0),window.addEventListener("touchmove",this._onMoveEvent,!0),window.addEventListener("dragover",this._onMoveEvent,!0),this}}).start();const s=(e,t=null,s="dragging")=>{let n=null;const o=t=>{const s=t.touches?t.touches[0]:t;t.stopImmediatePropagation(),n={client:{x:s.clientX,y:s.clientY},delta:{x:0,y:0},start:{x:e.offsetLeft,y:e.offsetTop},dragging:!1,isTouch:!!t.touches},window.addEventListener("mousemove",i),window.addEventListener("mouseup",r),window.addEventListener("touchmove",i),window.addEventListener("touchend",r)},i=o=>{const{start:i,delta:r,client:a}=n,d=o.touches?o.touches[0]:o,c=(()=>{let t=e;for(;t&&!(t instanceof Document||t instanceof ShadowRoot);){const e=t.style.zoom;if(e)return Number(e);t=t.parentNode}return 1})();r.x=(d.clientX-a.x)/c,r.y=(d.clientY-a.y)/c,n.x=i.x+r.x,n.y=i.y+r.y,!0===n.dragging?(null!==t?t(n):e.style.cssText+=`; left: ${n.x}px; top: ${n.y}px;`,o.stopImmediatePropagation()):(Math.abs(r.x)>2||Math.abs(r.y)>2)&&(n.dragging=!0,e.classList.add("drag"),s&&document.body.classList.add(s),o.stopImmediatePropagation())},r=a=>{a.stopImmediatePropagation(),e.classList.remove("drag"),s&&document.body.classList.remove(s),window.removeEventListener("mousemove",i),window.removeEventListener("mouseup",r),window.removeEventListener("touchmove",i),window.removeEventListener("touchend",r),null===t&&(e.removeEventListener("mousedown",o),e.removeEventListener("touchstart",o)),n.dragging=!1,null!==t&&t(n)};if(e instanceof Event){const t=e;e=t.target,o(t)}else e.addEventListener("mousedown",o),e.addEventListener("touchstart",o)},n=(e,...t)=>{for(const s of e)if(!1===s(...t))return!1;return!0},o=e=>(!1===isNaN(e)&&(e=`${e}px`),e),i=e=>(!1===isNaN(e)&&(e=`#${e.toString(16).padStart(6,"0")}`),e);export{t as S,i as a,s as b,n as d,o as t};
